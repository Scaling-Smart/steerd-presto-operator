package presto

import (
	"sigs.k8s.io/controller-runtime/pkg/event"
	"sigs.k8s.io/controller-runtime/pkg/predicate"
	logf "sigs.k8s.io/controller-runtime/pkg/runtime/log"
)

type GenerationChangedPredicate struct {
	predicate.Funcs
}

// Predicate to ignore the Update events where the resource version has not been changed
// This is needed to avoid the events generated by the status updates.
// The idea has been picked up from here:
// https://www.openshift.com/blog/kubernetes-operators-best-practices
func (GenerationChangedPredicate) Update(e event.UpdateEvent) bool {
	var log = logf.Log.WithName("predicate").WithName("prestoControllerStatusFilter")
	if e.MetaOld == nil {
		log.Error(nil, "Update event has no old metadata", "event", e)
		return false
	}
	if e.ObjectOld == nil {
		log.Error(nil, "Update event has no old runtime object to update", "event", e)
		return false
	}
	if e.ObjectNew == nil {
		log.Error(nil, "Update event has no new runtime object for update", "event", e)
		return false
	}
	if e.MetaNew == nil {
		log.Error(nil, "Update event has no new metadata", "event", e)
		return false
	}
	if e.MetaNew.GetGeneration() == e.MetaOld.GetGeneration() && e.MetaNew.GetGeneration() != 0 {
		return false
	}
	return true
}